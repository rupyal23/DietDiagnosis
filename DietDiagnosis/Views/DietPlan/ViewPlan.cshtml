@model DietDiagnosis.ViewModels.DietPlanViewModel
@{
	ViewBag.Title = "ViewPlan";
	Layout = "~/Views/Shared/_InsideLayout.cshtml";
}
<head>
	<title>Bootstrap Example</title>
	<meta charset="utf-8">
	<meta name="viewport" content="width=device-width, initial-scale=1">
	<link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/3.4.0/css/bootstrap.min.css">
	<script src="https://ajax.googleapis.com/ajax/libs/jquery/3.3.1/jquery.min.js"></script>
	<script src="https://maxcdn.bootstrapcdn.com/bootstrap/3.4.0/js/bootstrap.min.js"></script>
	<script src="https://canvasjs.com/assets/script/canvasjs.min.js"></script>
</head>
<style>

	body {
		background-color: #dae2e0;
	}

	div.polaroid {
		width: 300px;
		box-shadow: 0 4px 8px 0 rgba(0, 0, 0, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19);
		text-align: center;
		padding: 50px;
	}
		div.polaroid:hover {
			box-shadow: 0 5px 15px 2px rgba(0, 0, 0, 0.2), 0 10px 30px 15px rgba(0, 0, 0, 0.19);
		}
</style>
<div class="row">
	<div class="col-md-6">
		<div class="well well-sm">
			<h1>Diet - @Model.DietPlan.Name</h1>
			<p>Total Calories : @Model.DietPlan.TotalCalories</p>
			<p>Total Number of Meals : @Model.DietPlan.NumberOfMeals</p>
		</div>
	</div>
	<div class="col-md-6">
		<div class="well well-sm">
			<h1>Nutrient Constraints</h1>
			<p>@Model.Nutrient.Name (@Model.Nutrient.Symbol) Between @Model.Nutrient.Min@(Model.Nutrient.Unit) - @Model.Nutrient.Max@(Model.Nutrient.Unit)</p>
		</div>
	</div>
</div>
<div class="jumbotron">
	<div class="row">

		@for (int i = 0; i < Model.DietPlan.NumberOfMeals; i++)
		{
        
            <div class="col-md-6">
                <div class="polaroid">
                    <img src="@Model.Meals[i].Image" class="img-thumbnail" />
                    <h3>@Html.DisplayFor(model => model.Meals[i].Name)</h3>
                    <div style="margin-top:10px;">
                        @Html.ActionLink("Recipe Info", "GetRecipeDetails", "DietPlan", new { inputUri = Model.Meals[i].Uri }, new { @class = "btn btn-primary" })
                    </div>
                </div>
            </div>
        
		}
		   
	</div>
</div>


		<!-- Modal -->
		@*<div class="modal fade" id="myModal" role="dialog">
				<div class="modal-dialog">
					<!-- Modal content-->
					<div class="modal-content">
						<div class="modal-header">
							<button type="button" class="close" data-dismiss="modal">&times;</button>
							<h4 class="modal-title">Recipe @Model.Meals[i].Name</h4>
						</div>
						<div class="modal-body">
							<!-- Put All Recipe Content in here-->
							<p>All Recipe Content.</p>
						</div>
						<div class="modal-footer">
							<button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
						</div>
					</div>
				</div>
			</div>*@
		@*<div class="modal fade" id="myNutrient" role="dialog">
					<div class="modal-dialog">
						<!-- Modal content-->
						<div class="modal-content">
							<div class="modal-header">
								<button type="button" class="close" data-dismiss="modal">&times;</button>
								<h4 class="modal-title">Recipe</h4>
							</div>
							<div class="modal-body" style="height:500px; width:auto">
								<!-- Put All Recipe Content in here-->
								<p id="chartContainer">All Recipe Content.</p>
							</div>
							<div class="modal-footer">
								<button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
							</div>
						</div>
					</div>
				</div>
			</div>*@



		@*<script type="text/javascript">

				$(function () {
					$('#GetData').click function() {
						$.ajax({
							url: '@Url.Action("GetRecipeDetails", "DietPlan")',
							type: 'POST',
							dataType: 'ViewData',
							contentType: 'application/json; charset=utf-8',
							data: [
								{
									indexLabelPlacement: "outside",
									type: "pie", //change type to bar, line, area, pie, etc
									dataPoints: @Html.Raw(ViewBag.DataPoints);
								}
							]
						}).done(function (response) {
							//Populate chart data and show the modal
							console.log(response);
							PopulateData(response);
							$('#myNutrient').modal('show');

						}).fail(function (error) {
							console.log(error);
						});
						function PopulateData(data) {
							var ctx = document.getElementById("myChart").getContext('2d');
							var chart = new CanvasJS.Chart("chartContainer", {
								theme: "light2",
								animationEnabled: true,
								title: {
									text: "Total Nutrients"
								},
								subtitles: [
									{ text: "Pie Chart" }
								],
								data: [
									{
										indexLabelPlacement: "outside",
										type: "pie", //change type to bar, line, area, pie, etc
										dataPoints: @Html.Raw(ViewBag.DataPoints);
									}
								]
							});
							chart.render();

						}
					});
			</script>*@

