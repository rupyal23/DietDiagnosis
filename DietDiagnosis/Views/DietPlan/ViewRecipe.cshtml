@model DietDiagnosis.Models.Recipe
@{
    ViewBag.Title = "ViewRecipe";
    Layout = "~/Views/Shared/_InsideLayout.cshtml";
}
<style>
    body {
        background-color: #dae2e0;
    }
    .well {
        background-color: #a9cc82;
    }
</style>
<div class="container">
    <div class="row">
        <div class="well">
            <h2 style="letter-spacing: 4px;">Recipe Info</h2>
        </div>
    </div>
</div>

<div class="container">
    <div class="col-md-6">
        <div class="jumbotron">
            <h2>@Html.Raw(ViewBag.RecipeLabel)</h2>
            <p>
                <h4>
                    Total Calories :
                    @Html.Raw(ViewBag.RecipeCalories)
                </h4>
            </p>

            @if (ViewBag.RecipeTime != 0 && ViewBag.RecipeTime < 400)
            {
                <p>
                    <h4>
                        Total Cooking Time :
                        @Html.Raw(ViewBag.RecipeTime) min
                    </h4>
                </p>
            }
        </div>
        <div class="jumbotron">
            <h4>Ingredients</h4>
            @foreach (var item in ViewBag.RecipeIngr)
            {
                <ul>
                    <li>@Html.Raw(item)</li>
                </ul>
            }
        </div>
        <div>
            Full Recipe @@ <a href="@ViewBag.RecipeURL">@ViewBag.RecipeSource</a>
        </div>
    </div>
    <div class="col-md-6">
        <div id="chartContainer"></div>
    </div>
</div>

<script src="https://canvasjs.com/assets/script/canvasjs.min.js"></script>
<script>
    window.onload = function () {

        var chart = new CanvasJS.Chart("chartContainer", {
            backgroundColor: "#DAE2E0",
	    exportEnabled: true,
	    animationEnabled: true,
	    theme: "light2",
	    title: {
		    text: "Nutrition Details"
	    },
	    legend: {
		    cursor: "pointer",
		    itemclick: explodePie,
		    verticalAlign: "center",
		    horizontalAlign: "right"
	    },
	    data: [{
		    type: "pie",
		    showInLegend: true,
		    toolTipContent: "{name}: <strong>{y}%</strong>",
		    startAngle: -45,
		    indexLabel: "{name} ({y}%)",
		    indexLabelFontColor: "#12122B",
		    indexLabelPlacement: "outside",
		    indexLabelFontSize: 15,
		    dataPoints: @Html.Raw(ViewBag.DataPoints)
	    }]
    });
    chart.render();

    function explodePie(e) {
	    if (typeof (e.dataSeries.dataPoints[e.dataPointIndex].exploded) === "undefined" || !e.dataSeries.dataPoints[e.dataPointIndex].exploded) {
		    e.dataSeries.dataPoints[e.dataPointIndex].exploded = true;
	    } else {
		    e.dataSeries.dataPoints[e.dataPointIndex].exploded = false;
	    }
	    e.chart.render();
    }

}
</script>
