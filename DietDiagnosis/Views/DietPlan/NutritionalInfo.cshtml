@model DietDiagnosis.Models.Food
@{
    ViewBag.Title = "NutritionalInfo";
    Layout = "~/Views/Shared/_InsideLayout.cshtml";
}
<style>
    body {
        background-color: #dae2e0;
    }
</style>
<link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/3.4.0/css/bootstrap.min.css">
<script src="https://ajax.googleapis.com/ajax/libs/jquery/3.3.1/jquery.min.js"></script>
<script src="https://maxcdn.bootstrapcdn.com/bootstrap/3.4.0/js/bootstrap.min.js"></script>
<div class="well">
    <h2>Nutritional Information</h2>
    <p>@Model.Name</p>
</div>
<div style="background-color:#ECF0F1" id="chartContainer"></div>
<div class="well">
    <div class="row">
        <div class="col-md-1">
            <button type="button" class="btn btn-info btn-lg" data-toggle="modal" data-target="#myModal">Check</button>
        </div>
        <div class="col-md-1">
            <button type="button" class="btn btn-info btn-lg" onclick="goBack()">Back</button>
        </div>
    </div>
</div>
<!-- Modal -->
<div id="myModal" class="modal fade" role="dialog">
    <div class="modal-dialog">

        <!-- Modal content-->
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal">&times;</button>
                <h4 class="modal-title">@Model.Name</h4>
            </div>
            <div class="modal-body">
                @if (@Html.Raw(TempData["danger"]).ToString() == "yes")
                {
                    <p class="bg-danger text-danger">@Html.Raw(TempData["message"])</p>
                }
                else if (@Html.Raw(TempData["danger"]).ToString() == "no")
                {
                    <p class="bg-success text-success">@Html.Raw(TempData["message"])</p>
                }
                else
                {
                    <p class="bg-info">@Html.Raw(TempData["message"])</p>
                }
                <p>Your Nutrient Constraint is : </p>
                <p>@Html.Raw(TempData["nutrient"])</p>
                <p>Minimum : @Html.Raw(TempData["minValue"]) @Html.Raw(TempData["unit"]) Maximum : @Html.Raw(TempData["maxValue"]) @Html.Raw(TempData["unit"])</p>
                <p>This item has @Html.Raw(TempData["nutrientValue"]) @Html.Raw(TempData["unit"])</p>

            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
            </div>
        </div>

    </div>
</div>


<script>
    function goBack() {
        window.history.back();
    }
</script>

<script src="https://canvasjs.com/assets/script/canvasjs.min.js"></script>
<script>
    window.onload = function () {

        var chart = new CanvasJS.Chart("chartContainer", {
        backgroundColor: "#ECF0F1",
	    exportEnabled: true,
	    animationEnabled: true,
	    theme: "light2",
	    title: {
		    text: "Nutrition Breakdown"
	    },
	    legend: {
		    cursor: "pointer",
		    itemclick: explodePie,
		    verticalAlign: "center",
		    horizontalAlign: "right"
	    },
	    data: [{
		    type: "pie",
		    showInLegend: true,
		    toolTipContent: "{name}: <strong>{y} {unit}</strong>",
		    startAngle: -45,
		    indexLabel: "{name} ({y} {unit})",
		    indexLabelFontColor: "#12122B",
		    indexLabelPlacement: "outside",
		    indexLabelFontSize: 15,
		    dataPoints: @Html.Raw(ViewBag.DataPoints)
	    }]
    });
    chart.render();

    function explodePie(e) {
	    if (typeof (e.dataSeries.dataPoints[e.dataPointIndex].exploded) === "undefined" || !e.dataSeries.dataPoints[e.dataPointIndex].exploded) {
		    e.dataSeries.dataPoints[e.dataPointIndex].exploded = true;
	    } else {
		    e.dataSeries.dataPoints[e.dataPointIndex].exploded = false;
	    }
	    e.chart.render();
    }

}
</script>
